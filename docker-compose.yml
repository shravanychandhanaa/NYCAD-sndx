version: '3.8'

services:
  postgres:
    image: public.ecr.aws/docker/library/postgres:15-alpine
    container_name: fhv-postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: fhv
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=fhv
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build: ./frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:4000
    ports:
      - "5173:80"
    depends_on:
      - backend
  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    container_name: fhv-cron
    depends_on:
      - postgres
    volumes:
      - .:/scripts
    restart: always

volumes:
  postgres_data:
